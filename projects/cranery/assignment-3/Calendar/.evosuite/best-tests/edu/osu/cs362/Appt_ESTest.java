/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 23:45:11 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(8, 8, 8, 8, 8, "7M(GYp#", "7M(GYp#");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t8/8/8 at 8:8am ,7M(GYp#, 7M(GYp#\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(90, 90, Integer.MAX_VALUE, 1, 90, "", "");
      appt0.setStartMinute(1);
      appt0.setStartDay(31);
      appt0.setStartHour(1);
      assertEquals(31, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(0, 59, 117, 59, 0, "am", "am");
      assertEquals("am", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals("am", appt0.getDescription());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(0, appt0.getStartYear());
      assertEquals(117, appt0.getStartDay());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(23, (-2915), (-2915), (-2915), 23, "pm", "i}uXibu`Bz'^t");
      boolean boolean0 = appt0.getValid();
      assertEquals(23, appt0.getStartHour());
      assertEquals(23, appt0.getStartYear());
      assertEquals("i}uXibu`Bz'^t", appt0.getDescription());
      assertFalse(boolean0);
      assertEquals("pm", appt0.getTitle());
      assertEquals(-2915, appt0.getStartMinute());
      assertEquals(-2915, appt0.getStartMonth());
      assertEquals(-2915, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(3073, 3073, 3073, 3073, 3073, "YC78ck%#t-Krzvt", "YC78ck%#t-Krzvt");
      String string0 = appt0.getTitle();
      assertEquals(3073, appt0.getStartHour());
      assertEquals(3073, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("YC78ck%#t-Krzvt", string0);
      assertEquals(3073, appt0.getStartMonth());
      assertEquals(3073, appt0.getStartDay());
      assertEquals("YC78ck%#t-Krzvt", appt0.getDescription());
      assertEquals(3073, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 1315, 0, "", "dyeN4}b9Q:7Vz~ll#d");
      int int0 = appt0.getStartYear();
      assertEquals(0, int0);
      assertEquals(1315, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals("dyeN4}b9Q:7Vz~ll#d", appt0.getDescription());
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertEquals("", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(1734, 0, 115, 0, 115, "", "O,p2>HVm<<_7|+Nu-#");
      int int0 = appt0.getStartMonth();
      assertFalse(appt0.getValid());
      assertEquals("", appt0.getTitle());
      assertEquals(115, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, int0);
      assertEquals("O,p2>HVm<<_7|+Nu-#", appt0.getDescription());
      assertEquals(1734, appt0.getStartHour());
      assertEquals(115, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt((-3748), (-3748), (-2499), (-3748), 1583, "\t", "\t");
      int int0 = appt0.getStartMonth();
      assertEquals(-2499, appt0.getStartDay());
      assertEquals((-3748), int0);
      assertEquals(-3748, appt0.getStartMinute());
      assertEquals("\t", appt0.getTitle());
      assertEquals(-3748, appt0.getStartHour());
      assertEquals("\t", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(1583, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt((-911), 0, 936, 1330, 1347, "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(-911, appt0.getStartHour());
      assertEquals(936, appt0.getStartDay());
      assertEquals(0, int0);
      assertEquals(1347, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(1330, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt((-453), (-3728), (-796), (-1592), (-3728), "wQ{Z", "wQ{Z");
      int int0 = appt0.getStartMinute();
      assertEquals("wQ{Z", appt0.getDescription());
      assertEquals(-453, appt0.getStartHour());
      assertEquals(-1592, appt0.getStartMonth());
      assertEquals(-3728, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("wQ{Z", appt0.getTitle());
      assertEquals((-3728), int0);
      assertEquals(-796, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-2980), 0, 84, "Z-nq|\tK", "]j");
      int int0 = appt0.getStartHour();
      assertEquals("]j", appt0.getDescription());
      assertEquals(84, appt0.getStartYear());
      assertEquals(0, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(-2980, appt0.getStartDay());
      assertEquals(0, int0);
      assertEquals("Z-nq|\tK", appt0.getTitle());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt((-543), 0, 0, 0, 0, "--", "--");
      int int0 = appt0.getStartDay();
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("--", appt0.getTitle());
      assertEquals("--", appt0.getDescription());
      assertEquals(-543, appt0.getStartHour());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 1, ")7:GeuO8$LEORWA", ")7:GeuO8$LEORWA");
      int int0 = appt0.getStartDay();
      assertTrue(appt0.getValid());
      assertEquals(")7:GeuO8$LEORWA", appt0.getDescription());
      assertEquals(1, appt0.getStartMinute());
      assertEquals(")7:GeuO8$LEORWA", appt0.getTitle());
      assertEquals(1, appt0.getStartYear());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, int0);
      assertEquals(1, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt((-579), (-579), (-579), (-579), (-579), "EU+&,#:5", "EU+&,#:5");
      String string0 = appt0.getDescription();
      assertEquals(-579, appt0.getStartHour());
      assertEquals(-579, appt0.getStartYear());
      assertEquals(-579, appt0.getStartDay());
      assertEquals(-579, appt0.getStartMinute());
      assertEquals("EU+&,#:5", string0);
      assertEquals("EU+&,#:5", appt0.getTitle());
      assertEquals(-579, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt((-453), (-3728), (-796), (-1592), (-3728), "wQ{Z", "wQ{Z");
      appt0.setDescription("wQ{Z");
      assertEquals("wQ{Z", appt0.getTitle());
      assertEquals(-3728, appt0.getStartMinute());
      assertEquals(-3728, appt0.getStartYear());
      assertEquals("wQ{Z", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(-453, appt0.getStartHour());
      assertEquals(-796, appt0.getStartDay());
      assertEquals(-1592, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-718), (-718), (-718), (-718), (-718), "", "NihWU6Jue%CG(Exfx`0");
      assertEquals("", appt0.getTitle());
      
      appt0.setTitle("NihWU6Jue%CG(Exfx`0");
      assertEquals("NihWU6Jue%CG(Exfx`0", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt(8, 8, 8, 8, 8, "7M(GYp#", "7M(GYp#");
      assertEquals("7M(GYp#", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertTrue(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt((-911), 0, 936, 1330, 1347, "", "");
      appt0.getTitle();
      assertEquals(1330, appt0.getStartMonth());
      assertEquals(1347, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(936, appt0.getStartDay());
      assertEquals(-911, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt((-453), (-3728), (-796), (-1592), (-3728), "wQ{Z", "wQ{Z");
      int int0 = appt0.getStartDay();
      assertEquals(-453, appt0.getStartHour());
      assertEquals(-1592, appt0.getStartMonth());
      assertEquals(-3728, appt0.getStartMinute());
      assertEquals(-3728, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("wQ{Z", appt0.getDescription());
      assertEquals("wQ{Z", appt0.getTitle());
      assertEquals((-796), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt(1, 1, 1, 1, 1, ")7:GeuO8$LEORWA", ")7:GeuO8$LEORWA");
      boolean boolean0 = appt0.getValid();
      assertEquals(")7:GeuO8$LEORWA", appt0.getTitle());
      assertEquals(1, appt0.getStartHour());
      assertEquals(1, appt0.getStartYear());
      assertEquals(1, appt0.getStartMonth());
      assertTrue(boolean0);
      assertEquals(")7:GeuO8$LEORWA", appt0.getDescription());
      assertEquals(1, appt0.getStartDay());
      assertEquals(1, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-453), (-3728), (-796), (-1592), (-3728), "wQ{Z", "wQ{Z");
      int int0 = appt0.getStartHour();
      assertEquals(-796, appt0.getStartDay());
      assertEquals(-1592, appt0.getStartMonth());
      assertEquals("wQ{Z", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals("wQ{Z", appt0.getDescription());
      assertEquals(-3728, appt0.getStartYear());
      assertEquals((-453), int0);
      assertEquals(-3728, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(404, 404, 117, 404, 59, "[F62Es+s0Eq3Y68", "'4V");
      int int0 = appt0.getStartYear();
      assertFalse(appt0.getValid());
      assertEquals("[F62Es+s0Eq3Y68", appt0.getTitle());
      assertEquals(404, appt0.getStartHour());
      assertEquals(59, int0);
      assertEquals(117, appt0.getStartDay());
      assertEquals("'4V", appt0.getDescription());
      assertEquals(404, appt0.getStartMonth());
      assertEquals(404, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 12, 12, "9<%,H>J{NoI$A", "9<%,H>J{NoI$A");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/12/12 at 12:12pm ,9<%,H>J{NoI$A, 9<%,H>J{NoI$A\n", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt(1247, (-540), 1247, (-2977), (-2977), (String) null, (String) null);
      int int0 = appt0.getStartYear();
      assertFalse(appt0.getValid());
      assertEquals(-2977, appt0.getStartMonth());
      assertEquals((-2977), int0);
      assertEquals(1247, appt0.getStartDay());
      assertEquals(1247, appt0.getStartHour());
      assertEquals(-540, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(22, 22, 22, 22, 22, "", "");
      assertEquals(22, appt0.getStartMonth());
      assertEquals(22, appt0.getStartMinute());
      assertEquals(22, appt0.getStartHour());
      assertEquals(22, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(22, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 23, 0, 644, "Nl", "");
      assertEquals(644, appt0.getStartYear());
      assertEquals(23, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals("", appt0.getDescription());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartMinute());
      assertEquals("Nl", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, (-4428), 0, 0, 0, "", "");
      appt0.setStartHour(2207);
      int int0 = appt0.getStartHour();
      assertEquals(2207, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt((-3748), (-3748), (-2499), (-3748), 1583, "\t", "\t");
      assertEquals("\t", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(-3748, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "RX,phN ?RjB]", "RX,phN ?RjB]");
      String string0 = appt0.toString();
      assertEquals("\t11/11/11 at 11:11am ,RX,phN ?RjB], RX,phN ?RjB]\n", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(90, 90, Integer.MAX_VALUE, 1, 90, "", "");
      appt0.getDescription();
      assertEquals(90, appt0.getStartMinute());
      assertEquals(90, appt0.getStartYear());
      assertEquals(2147483647, appt0.getStartDay());
      assertEquals(90, appt0.getStartHour());
      assertEquals(1, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(90, 90, Integer.MAX_VALUE, 1, 90, "", "");
      int int0 = appt0.getStartMonth();
      assertEquals(90, appt0.getStartYear());
      assertEquals(1, int0);
      assertEquals(2147483647, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(90, appt0.getStartHour());
      assertEquals(90, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(404, 404, 117, 404, 59, "[F62Es+s0Eq3Y68", "'4V");
      assertEquals(59, appt0.getStartYear());
      
      appt0.setStartYear(404);
      assertEquals(404, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(90, 90, Integer.MAX_VALUE, 1, 90, "", "");
      assertEquals(90, appt0.getStartHour());
      
      appt0.setStartHour(1);
      assertEquals(1, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(90, 90, Integer.MAX_VALUE, 1, 90, "", "");
      String string0 = appt0.toString();
      assertEquals(90, appt0.getStartHour());
      assertEquals(2147483647, appt0.getStartDay());
      assertEquals(90, appt0.getStartYear());
      assertNull(string0);
      assertEquals(1, appt0.getStartMonth());
      assertEquals(90, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(90, 90, Integer.MAX_VALUE, 1, 90, "", "");
      appt0.setStartMonth(1);
      assertEquals(1, appt0.getStartMonth());
      assertEquals(2147483647, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(90, appt0.getStartHour());
      assertEquals(90, appt0.getStartYear());
      assertEquals(90, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Appt appt0 = new Appt(90, 90, Integer.MAX_VALUE, 1, 90, "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(90, appt0.getStartYear());
      assertEquals(1, appt0.getStartMonth());
      assertEquals(2147483647, appt0.getStartDay());
      assertEquals(90, appt0.getStartHour());
      assertEquals(90, int0);
      assertFalse(appt0.getValid());
  }
}
